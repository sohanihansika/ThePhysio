{"ast":null,"code":"import axios from 'axios';\nclass UserService {\n  static async login(email, password) {\n    try {\n      const response = await axios.post(`${UserService.BASE_URL}/auth/login`, {\n        email,\n        password\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async register(userData, token) {\n    try {\n      const response = await axios.post(`${UserService.BASE_URL}/auth/register`, {\n        userData,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getAllUsers(token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/admin/get-all-users`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getYourProfile(token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/adminuser/get-profile`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getUserById(userId, token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/admin/get-user/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async deleteUser(userId, token) {\n    try {\n      const response = await axios.delete(`${UserService.BASE_URL}/admin/delete/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async updateUser(userId, userData, token) {\n    try {\n      const response = await axios.put(`${UserService.BASE_URL}/admin/update/${userId}`, userData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**AUTHENTICATION CHECKER */\n  static logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    // Navigate(`/`);\n    window.location.href = '/';\n  }\n  static isAuthenticated() {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n  static isAdmin() {\n    const role = localStorage.getItem('role');\n    return role === 'ADMIN';\n  }\n  static userType() {\n    const role = localStorage.getItem('role');\n    return role;\n  }\n  static isUser() {\n    const role = localStorage.getItem('role');\n    return role === 'USER';\n  }\n  static adminOnly() {\n    return this.isAuthenticated() && this.isAdmin();\n  }\n}\nUserService.BASE_URL = 'http://localhost:8082';\nexport default UserService;","map":{"version":3,"names":["axios","UserService","login","email","password","response","post","BASE_URL","data","err","register","userData","token","headers","Authorization","getAllUsers","get","getYourProfile","getUserById","userId","deleteUser","delete","updateUser","put","logout","localStorage","removeItem","window","location","href","isAuthenticated","getItem","isAdmin","role","userType","isUser","adminOnly"],"sources":["C:/Users/Hasini/OneDrive/Desktop/group2/ThePhysio/secondtry-front/src/components/service/UserService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nclass UserService{\r\n    static BASE_URL = 'http://localhost:8082';\r\n\r\n    static async login(email, password){\r\n        try{\r\n\r\n            const response = await axios.post(`${UserService.BASE_URL}/auth/login`, {\r\n                email,\r\n                password\r\n            });\r\n            return response.data;\r\n\r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    static async register(userData, token){\r\n        try{\r\n\r\n            const response = await axios.post(`${UserService.BASE_URL}/auth/register`, {\r\n                userData,\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            });\r\n            return response.data;\r\n            \r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    static async getAllUsers(token){\r\n        try{\r\n\r\n            const response = await axios.get(`${UserService.BASE_URL}/admin/get-all-users`, {\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            });\r\n            return response.data;\r\n            \r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    \r\n    static async getYourProfile(token){\r\n        try{\r\n\r\n            const response = await axios.get(`${UserService.BASE_URL}/adminuser/get-profile`, {\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            });\r\n            return response.data;\r\n            \r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    static async getUserById(userId, token){\r\n        try{\r\n\r\n            const response = await axios.get(`${UserService.BASE_URL}/admin/get-user/${userId}`, {\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            });\r\n            return response.data;\r\n            \r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    static async deleteUser(userId, token){\r\n        try{\r\n\r\n            const response = await axios.delete(`${UserService.BASE_URL}/admin/delete/${userId}`, {\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            });\r\n            return response.data;\r\n            \r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    static async updateUser(userId, userData, token){\r\n        try{\r\n\r\n            const response = await axios.put(`${UserService.BASE_URL}/admin/update/${userId}`, userData,\r\n            {\r\n                headers: {Authorization: `Bearer ${token}`}\r\n            });\r\n            return response.data;\r\n            \r\n        }catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    /**AUTHENTICATION CHECKER */\r\n    static logout(){\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('role');\r\n        // Navigate(`/`);\r\n        window.location.href = '/';\r\n    }\r\n\r\n    static isAuthenticated(){\r\n        const token = localStorage.getItem('token');\r\n        return !!token;\r\n    }\r\n\r\n    static isAdmin(){\r\n        const role = localStorage.getItem('role');\r\n        return role === 'ADMIN';\r\n    }\r\n\r\n    static userType(){\r\n        const role = localStorage.getItem('role');\r\n        return role;\r\n    }\r\n\r\n    static isUser(){\r\n        const role = localStorage.getItem('role');\r\n        return role === 'USER';\r\n    }\r\n\r\n    static adminOnly(){\r\n        return this.isAuthenticated() && this.isAdmin();\r\n    }\r\n}\r\n\r\nexport default UserService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW;EAGb,aAAaC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAC;IAC/B,IAAG;MAEC,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,WAAW,CAACM,QAAQ,aAAa,EAAE;QACpEJ,KAAK;QACLC;MACJ,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACG,IAAI;IAExB,CAAC,QAAMC,GAAG,EAAC;MACP,MAAMA,GAAG;IACb;EACJ;EAEA,aAAaC,QAAQA,CAACC,QAAQ,EAAEC,KAAK,EAAC;IAClC,IAAG;MAEC,MAAMP,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,WAAW,CAACM,QAAQ,gBAAgB,EAAE;QACvEI,QAAQ;QACRE,OAAO,EAAE;UAACC,aAAa,EAAE,UAAUF,KAAK;QAAE;MAC9C,CAAC,CAAC;MACF,OAAOP,QAAQ,CAACG,IAAI;IAExB,CAAC,QAAMC,GAAG,EAAC;MACP,MAAMA,GAAG;IACb;EACJ;EAEA,aAAaM,WAAWA,CAACH,KAAK,EAAC;IAC3B,IAAG;MAEC,MAAMP,QAAQ,GAAG,MAAML,KAAK,CAACgB,GAAG,CAAC,GAAGf,WAAW,CAACM,QAAQ,sBAAsB,EAAE;QAC5EM,OAAO,EAAE;UAACC,aAAa,EAAE,UAAUF,KAAK;QAAE;MAC9C,CAAC,CAAC;MACF,OAAOP,QAAQ,CAACG,IAAI;IAExB,CAAC,QAAMC,GAAG,EAAC;MACP,MAAMA,GAAG;IACb;EACJ;EAGA,aAAaQ,cAAcA,CAACL,KAAK,EAAC;IAC9B,IAAG;MAEC,MAAMP,QAAQ,GAAG,MAAML,KAAK,CAACgB,GAAG,CAAC,GAAGf,WAAW,CAACM,QAAQ,wBAAwB,EAAE;QAC9EM,OAAO,EAAE;UAACC,aAAa,EAAE,UAAUF,KAAK;QAAE;MAC9C,CAAC,CAAC;MACF,OAAOP,QAAQ,CAACG,IAAI;IAExB,CAAC,QAAMC,GAAG,EAAC;MACP,MAAMA,GAAG;IACb;EACJ;EAEA,aAAaS,WAAWA,CAACC,MAAM,EAAEP,KAAK,EAAC;IACnC,IAAG;MAEC,MAAMP,QAAQ,GAAG,MAAML,KAAK,CAACgB,GAAG,CAAC,GAAGf,WAAW,CAACM,QAAQ,mBAAmBY,MAAM,EAAE,EAAE;QACjFN,OAAO,EAAE;UAACC,aAAa,EAAE,UAAUF,KAAK;QAAE;MAC9C,CAAC,CAAC;MACF,OAAOP,QAAQ,CAACG,IAAI;IAExB,CAAC,QAAMC,GAAG,EAAC;MACP,MAAMA,GAAG;IACb;EACJ;EAEA,aAAaW,UAAUA,CAACD,MAAM,EAAEP,KAAK,EAAC;IAClC,IAAG;MAEC,MAAMP,QAAQ,GAAG,MAAML,KAAK,CAACqB,MAAM,CAAC,GAAGpB,WAAW,CAACM,QAAQ,iBAAiBY,MAAM,EAAE,EAAE;QAClFN,OAAO,EAAE;UAACC,aAAa,EAAE,UAAUF,KAAK;QAAE;MAC9C,CAAC,CAAC;MACF,OAAOP,QAAQ,CAACG,IAAI;IAExB,CAAC,QAAMC,GAAG,EAAC;MACP,MAAMA,GAAG;IACb;EACJ;EAEA,aAAaa,UAAUA,CAACH,MAAM,EAAER,QAAQ,EAAEC,KAAK,EAAC;IAC5C,IAAG;MAEC,MAAMP,QAAQ,GAAG,MAAML,KAAK,CAACuB,GAAG,CAAC,GAAGtB,WAAW,CAACM,QAAQ,iBAAiBY,MAAM,EAAE,EAAER,QAAQ,EAC3F;QACIE,OAAO,EAAE;UAACC,aAAa,EAAE,UAAUF,KAAK;QAAE;MAC9C,CAAC,CAAC;MACF,OAAOP,QAAQ,CAACG,IAAI;IAExB,CAAC,QAAMC,GAAG,EAAC;MACP,MAAMA,GAAG;IACb;EACJ;;EAEA;EACA,OAAOe,MAAMA,CAAA,EAAE;IACXC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;IAC/B;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC9B;EAEA,OAAOC,eAAeA,CAAA,EAAE;IACpB,MAAMlB,KAAK,GAAGa,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAO,CAAC,CAACnB,KAAK;EAClB;EAEA,OAAOoB,OAAOA,CAAA,EAAE;IACZ,MAAMC,IAAI,GAAGR,YAAY,CAACM,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOE,IAAI,KAAK,OAAO;EAC3B;EAEA,OAAOC,QAAQA,CAAA,EAAE;IACb,MAAMD,IAAI,GAAGR,YAAY,CAACM,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOE,IAAI;EACf;EAEA,OAAOE,MAAMA,CAAA,EAAE;IACX,MAAMF,IAAI,GAAGR,YAAY,CAACM,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOE,IAAI,KAAK,MAAM;EAC1B;EAEA,OAAOG,SAASA,CAAA,EAAE;IACd,OAAO,IAAI,CAACN,eAAe,CAAC,CAAC,IAAI,IAAI,CAACE,OAAO,CAAC,CAAC;EACnD;AACJ;AAjIM/B,WAAW,CACNM,QAAQ,GAAG,uBAAuB;AAkI7C,eAAeN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}